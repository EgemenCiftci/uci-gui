<Window x:Class="UciGui.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:properties="clr-namespace:UciGui.Properties"
        xmlns:converters="clr-namespace:UciGui.Converters"
        xmlns:userControls="clr-namespace:UciGui.UserControls"
        xmlns:ts="clr-namespace:UciGui.TemplateSelectors"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:viewmodels="clr-namespace:UciGui.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="UCI GUI" 
        Height="600" 
        Width="800"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="btvc"/>
        <converters:BooleanToInverseVisibilityConverter x:Key="btivc"/>
        <ts:OptionsDataTemplateSelector x:Key="odts"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <DockPanel>
            <GroupBox Header="Input" DockPanel.Dock="Top">
                <StackPanel>
                    <TextBox Text="{Binding Fen}" Margin="2"/>
                    <Button Content="GO" Command="{Binding GoCommand}" Visibility="{Binding IsBusy, Converter={StaticResource btivc}}" Background="#FF06B025" Margin="2"/>
                    <Button Command="{Binding StopCommand}" Visibility="{Binding IsBusy, Converter={StaticResource btvc}}" Margin="2" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <Grid>
                            <ProgressBar IsIndeterminate="True" Background="Red"/>
                            <TextBlock Text="STOP" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Button>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Result" DockPanel.Dock="Top">
                <StackPanel>
                    <TextBlock Text="{Binding BestMove, StringFormat=Best Move:&#x09;{0}}"/>
                    <TextBlock Text="{Binding Ponder, StringFormat=Ponder:&#x09;&#x09;{0}}"/>
                    <TextBlock Text="{Binding UciEngineExe, Source={x:Static properties:Settings.Default}, StringFormat=(Using {0})}"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="About" DockPanel.Dock="Bottom">
                <StackPanel>
                    <TextBlock Text="2023 - Egemen Çiftci"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Visual" DockPanel.Dock="Top">
                <Grid>
                    <userControls:ChessBoard HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
                    <userControls:ChessPiece ShapeType="Bishop" ColorType="Dark" Height="24" Width="24" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                </Grid>
            </GroupBox>
        </DockPanel>
        <GroupBox Header="Options" Grid.Column="1">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding Options}" ItemTemplateSelector="{StaticResource odts}">
                    <ItemsControl.Resources>
                        <DataTemplate x:Key="spinTemplate">
                            <DockPanel Margin="2">
                                <TextBlock Text="{Binding Name, StringFormat={}{0}: }" VerticalAlignment="Center"/>
                                <Slider Value="{Binding Default}" Minimum="{Binding Minimum}" Maximum="{Binding Maximum}" DockPanel.Dock="Right" SmallChange="1" IsSnapToTickEnabled="True" AutoToolTipPlacement="TopLeft">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <prism:InvokeCommandAction Command="{Binding DataContext.ValueChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" TriggerParameterPath=""/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Slider>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="checkTemplate">
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding Default}" Command="{Binding DataContext.CheckBoxChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Margin="2"/>
                        </DataTemplate>
                        <DataTemplate x:Key="stringTemplate">
                            <DockPanel Margin="2">
                                <TextBlock Text="{Binding Name, StringFormat={}{0}: }" VerticalAlignment="Center"/>
                                <TextBox Text="{Binding Default}" DockPanel.Dock="Right">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <prism:InvokeCommandAction Command="{Binding DataContext.TextChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" TriggerParameterPath=""/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="buttonTemplate">
                            <Button Content="{Binding Name}" Command="{Binding DataContext.ButtonChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}" Margin="2"/>
                        </DataTemplate>
                        <DataTemplate x:Key="comboTemplate">
                            <DockPanel Margin="2">
                                <TextBlock Text="{Binding Name, StringFormat={}{0}: }" VerticalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding Items}" SelectedItem="{Binding Default}" DockPanel.Dock="Right" Margin="2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <prism:InvokeCommandAction Command="{Binding DataContext.SelectionChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" TriggerParameterPath=""/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                            </DockPanel>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </ScrollViewer>
        </GroupBox>
        <Grid Grid.Column="1" Background="White" Opacity="0.5" Visibility="{Binding IsBusy, Converter={StaticResource btvc}}" d:IsHidden="True"/>
    </Grid>
</Window>
